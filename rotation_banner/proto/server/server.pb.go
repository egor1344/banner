// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/server/server.proto

package server

import (
	context "context"
	fmt "fmt"
	banner "github.com/egor1344/banner/rotation_banner/proto/banner"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddBannerRequest struct {
	Banner               *banner.Banner `protobuf:"bytes,1,opt,name=banner,proto3" json:"banner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AddBannerRequest) Reset()         { *m = AddBannerRequest{} }
func (m *AddBannerRequest) String() string { return proto.CompactTextString(m) }
func (*AddBannerRequest) ProtoMessage()    {}
func (*AddBannerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{0}
}

func (m *AddBannerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBannerRequest.Unmarshal(m, b)
}
func (m *AddBannerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBannerRequest.Marshal(b, m, deterministic)
}
func (m *AddBannerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBannerRequest.Merge(m, src)
}
func (m *AddBannerRequest) XXX_Size() int {
	return xxx_messageInfo_AddBannerRequest.Size(m)
}
func (m *AddBannerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBannerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddBannerRequest proto.InternalMessageInfo

func (m *AddBannerRequest) GetBanner() *banner.Banner {
	if m != nil {
		return m.Banner
	}
	return nil
}

type AddBannerResponse struct {
	// Types that are valid to be assigned to Result:
	//	*AddBannerResponse_Status
	//	*AddBannerResponse_Error
	Result               isAddBannerResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AddBannerResponse) Reset()         { *m = AddBannerResponse{} }
func (m *AddBannerResponse) String() string { return proto.CompactTextString(m) }
func (*AddBannerResponse) ProtoMessage()    {}
func (*AddBannerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{1}
}

func (m *AddBannerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBannerResponse.Unmarshal(m, b)
}
func (m *AddBannerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBannerResponse.Marshal(b, m, deterministic)
}
func (m *AddBannerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBannerResponse.Merge(m, src)
}
func (m *AddBannerResponse) XXX_Size() int {
	return xxx_messageInfo_AddBannerResponse.Size(m)
}
func (m *AddBannerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBannerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddBannerResponse proto.InternalMessageInfo

type isAddBannerResponse_Result interface {
	isAddBannerResponse_Result()
}

type AddBannerResponse_Status struct {
	Status bool `protobuf:"varint,1,opt,name=status,proto3,oneof"`
}

type AddBannerResponse_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*AddBannerResponse_Status) isAddBannerResponse_Result() {}

func (*AddBannerResponse_Error) isAddBannerResponse_Result() {}

func (m *AddBannerResponse) GetResult() isAddBannerResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *AddBannerResponse) GetStatus() bool {
	if x, ok := m.GetResult().(*AddBannerResponse_Status); ok {
		return x.Status
	}
	return false
}

func (m *AddBannerResponse) GetError() string {
	if x, ok := m.GetResult().(*AddBannerResponse_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AddBannerResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AddBannerResponse_Status)(nil),
		(*AddBannerResponse_Error)(nil),
	}
}

type DelBannerRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelBannerRequest) Reset()         { *m = DelBannerRequest{} }
func (m *DelBannerRequest) String() string { return proto.CompactTextString(m) }
func (*DelBannerRequest) ProtoMessage()    {}
func (*DelBannerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{2}
}

func (m *DelBannerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelBannerRequest.Unmarshal(m, b)
}
func (m *DelBannerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelBannerRequest.Marshal(b, m, deterministic)
}
func (m *DelBannerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelBannerRequest.Merge(m, src)
}
func (m *DelBannerRequest) XXX_Size() int {
	return xxx_messageInfo_DelBannerRequest.Size(m)
}
func (m *DelBannerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelBannerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DelBannerRequest proto.InternalMessageInfo

func (m *DelBannerRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DelBannerResponse struct {
	// Types that are valid to be assigned to Result:
	//	*DelBannerResponse_Status
	//	*DelBannerResponse_Error
	Result               isDelBannerResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *DelBannerResponse) Reset()         { *m = DelBannerResponse{} }
func (m *DelBannerResponse) String() string { return proto.CompactTextString(m) }
func (*DelBannerResponse) ProtoMessage()    {}
func (*DelBannerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{3}
}

func (m *DelBannerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelBannerResponse.Unmarshal(m, b)
}
func (m *DelBannerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelBannerResponse.Marshal(b, m, deterministic)
}
func (m *DelBannerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelBannerResponse.Merge(m, src)
}
func (m *DelBannerResponse) XXX_Size() int {
	return xxx_messageInfo_DelBannerResponse.Size(m)
}
func (m *DelBannerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DelBannerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DelBannerResponse proto.InternalMessageInfo

type isDelBannerResponse_Result interface {
	isDelBannerResponse_Result()
}

type DelBannerResponse_Status struct {
	Status bool `protobuf:"varint,1,opt,name=status,proto3,oneof"`
}

type DelBannerResponse_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*DelBannerResponse_Status) isDelBannerResponse_Result() {}

func (*DelBannerResponse_Error) isDelBannerResponse_Result() {}

func (m *DelBannerResponse) GetResult() isDelBannerResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *DelBannerResponse) GetStatus() bool {
	if x, ok := m.GetResult().(*DelBannerResponse_Status); ok {
		return x.Status
	}
	return false
}

func (m *DelBannerResponse) GetError() string {
	if x, ok := m.GetResult().(*DelBannerResponse_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DelBannerResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DelBannerResponse_Status)(nil),
		(*DelBannerResponse_Error)(nil),
	}
}

type CountTransitionRequest struct {
	IdBanner             int64    `protobuf:"varint,1,opt,name=id_banner,json=idBanner,proto3" json:"id_banner,omitempty"`
	IdSocDemGroup        int64    `protobuf:"varint,2,opt,name=id_soc_dem_group,json=idSocDemGroup,proto3" json:"id_soc_dem_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountTransitionRequest) Reset()         { *m = CountTransitionRequest{} }
func (m *CountTransitionRequest) String() string { return proto.CompactTextString(m) }
func (*CountTransitionRequest) ProtoMessage()    {}
func (*CountTransitionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{4}
}

func (m *CountTransitionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountTransitionRequest.Unmarshal(m, b)
}
func (m *CountTransitionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountTransitionRequest.Marshal(b, m, deterministic)
}
func (m *CountTransitionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountTransitionRequest.Merge(m, src)
}
func (m *CountTransitionRequest) XXX_Size() int {
	return xxx_messageInfo_CountTransitionRequest.Size(m)
}
func (m *CountTransitionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountTransitionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountTransitionRequest proto.InternalMessageInfo

func (m *CountTransitionRequest) GetIdBanner() int64 {
	if m != nil {
		return m.IdBanner
	}
	return 0
}

func (m *CountTransitionRequest) GetIdSocDemGroup() int64 {
	if m != nil {
		return m.IdSocDemGroup
	}
	return 0
}

type CountTransitionResponse struct {
	// Types that are valid to be assigned to Result:
	//	*CountTransitionResponse_Status
	//	*CountTransitionResponse_Error
	Result               isCountTransitionResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CountTransitionResponse) Reset()         { *m = CountTransitionResponse{} }
func (m *CountTransitionResponse) String() string { return proto.CompactTextString(m) }
func (*CountTransitionResponse) ProtoMessage()    {}
func (*CountTransitionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{5}
}

func (m *CountTransitionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountTransitionResponse.Unmarshal(m, b)
}
func (m *CountTransitionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountTransitionResponse.Marshal(b, m, deterministic)
}
func (m *CountTransitionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountTransitionResponse.Merge(m, src)
}
func (m *CountTransitionResponse) XXX_Size() int {
	return xxx_messageInfo_CountTransitionResponse.Size(m)
}
func (m *CountTransitionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountTransitionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountTransitionResponse proto.InternalMessageInfo

type isCountTransitionResponse_Result interface {
	isCountTransitionResponse_Result()
}

type CountTransitionResponse_Status struct {
	Status bool `protobuf:"varint,1,opt,name=status,proto3,oneof"`
}

type CountTransitionResponse_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*CountTransitionResponse_Status) isCountTransitionResponse_Result() {}

func (*CountTransitionResponse_Error) isCountTransitionResponse_Result() {}

func (m *CountTransitionResponse) GetResult() isCountTransitionResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *CountTransitionResponse) GetStatus() bool {
	if x, ok := m.GetResult().(*CountTransitionResponse_Status); ok {
		return x.Status
	}
	return false
}

func (m *CountTransitionResponse) GetError() string {
	if x, ok := m.GetResult().(*CountTransitionResponse_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CountTransitionResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CountTransitionResponse_Status)(nil),
		(*CountTransitionResponse_Error)(nil),
	}
}

type GetBannerRequest struct {
	IdSlot               int64    `protobuf:"varint,1,opt,name=id_slot,json=idSlot,proto3" json:"id_slot,omitempty"`
	IdSocDemGroup        int64    `protobuf:"varint,2,opt,name=id_soc_dem_group,json=idSocDemGroup,proto3" json:"id_soc_dem_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBannerRequest) Reset()         { *m = GetBannerRequest{} }
func (m *GetBannerRequest) String() string { return proto.CompactTextString(m) }
func (*GetBannerRequest) ProtoMessage()    {}
func (*GetBannerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{6}
}

func (m *GetBannerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBannerRequest.Unmarshal(m, b)
}
func (m *GetBannerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBannerRequest.Marshal(b, m, deterministic)
}
func (m *GetBannerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBannerRequest.Merge(m, src)
}
func (m *GetBannerRequest) XXX_Size() int {
	return xxx_messageInfo_GetBannerRequest.Size(m)
}
func (m *GetBannerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBannerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBannerRequest proto.InternalMessageInfo

func (m *GetBannerRequest) GetIdSlot() int64 {
	if m != nil {
		return m.IdSlot
	}
	return 0
}

func (m *GetBannerRequest) GetIdSocDemGroup() int64 {
	if m != nil {
		return m.IdSocDemGroup
	}
	return 0
}

type GetBannerResponse struct {
	Banner               *banner.Banner `protobuf:"bytes,1,opt,name=banner,proto3" json:"banner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetBannerResponse) Reset()         { *m = GetBannerResponse{} }
func (m *GetBannerResponse) String() string { return proto.CompactTextString(m) }
func (*GetBannerResponse) ProtoMessage()    {}
func (*GetBannerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{7}
}

func (m *GetBannerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBannerResponse.Unmarshal(m, b)
}
func (m *GetBannerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBannerResponse.Marshal(b, m, deterministic)
}
func (m *GetBannerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBannerResponse.Merge(m, src)
}
func (m *GetBannerResponse) XXX_Size() int {
	return xxx_messageInfo_GetBannerResponse.Size(m)
}
func (m *GetBannerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBannerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBannerResponse proto.InternalMessageInfo

func (m *GetBannerResponse) GetBanner() *banner.Banner {
	if m != nil {
		return m.Banner
	}
	return nil
}

func init() {
	proto.RegisterType((*AddBannerRequest)(nil), "server.AddBannerRequest")
	proto.RegisterType((*AddBannerResponse)(nil), "server.AddBannerResponse")
	proto.RegisterType((*DelBannerRequest)(nil), "server.DelBannerRequest")
	proto.RegisterType((*DelBannerResponse)(nil), "server.DelBannerResponse")
	proto.RegisterType((*CountTransitionRequest)(nil), "server.CountTransitionRequest")
	proto.RegisterType((*CountTransitionResponse)(nil), "server.CountTransitionResponse")
	proto.RegisterType((*GetBannerRequest)(nil), "server.GetBannerRequest")
	proto.RegisterType((*GetBannerResponse)(nil), "server.GetBannerResponse")
}

func init() { proto.RegisterFile("proto/server/server.proto", fileDescriptor_aedf378765df4bae) }

var fileDescriptor_aedf378765df4bae = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xc1, 0x6e, 0xe2, 0x30,
	0x10, 0x85, 0xa0, 0xcd, 0x92, 0x59, 0x2d, 0x1b, 0x72, 0x80, 0xc0, 0x4a, 0xbb, 0x28, 0x87, 0x5d,
	0x4e, 0x41, 0x05, 0xa4, 0xaa, 0xed, 0x85, 0x52, 0x24, 0xb8, 0x55, 0x32, 0xf4, 0xd2, 0x43, 0xa3,
	0x80, 0x2d, 0x6a, 0x29, 0xc4, 0xd4, 0x76, 0xfa, 0x51, 0xfd, 0xca, 0x2a, 0x89, 0x21, 0x21, 0x50,
	0x89, 0x03, 0x27, 0x6b, 0x3c, 0x6f, 0x66, 0x9e, 0xdf, 0x3c, 0x43, 0x6b, 0xcb, 0x99, 0x64, 0x3d,
	0x41, 0xf8, 0x3b, 0xe1, 0xea, 0x70, 0x93, 0x3b, 0x4b, 0x4f, 0xa3, 0xb6, 0x82, 0x2c, 0xfd, 0x30,
	0x24, 0x5c, 0x1d, 0x29, 0xc4, 0xb9, 0x05, 0xf3, 0x1e, 0xe3, 0x71, 0x72, 0x85, 0xc8, 0x5b, 0x44,
	0x84, 0xb4, 0xfe, 0x81, 0x9e, 0x62, 0xec, 0x72, 0xa7, 0xdc, 0xfd, 0xd1, 0xaf, 0xb9, 0xaa, 0x44,
	0xc1, 0x54, 0xd6, 0x79, 0x84, 0x7a, 0xae, 0x56, 0x6c, 0x59, 0x28, 0x88, 0x65, 0x83, 0x2e, 0xa4,
	0x2f, 0x23, 0x91, 0x14, 0x57, 0x67, 0x25, 0xa4, 0x62, 0xab, 0x01, 0xdf, 0x08, 0xe7, 0x8c, 0xdb,
	0x5a, 0xa7, 0xdc, 0x35, 0x66, 0x25, 0x94, 0x86, 0xe3, 0x2a, 0xe8, 0x9c, 0x88, 0x28, 0x90, 0x8e,
	0x03, 0xe6, 0x84, 0x04, 0x87, 0x64, 0x6a, 0xa0, 0x51, 0x9c, 0xf4, 0xaa, 0x20, 0x8d, 0xe2, 0x78,
	0x68, 0x0e, 0x73, 0x81, 0xa1, 0x2f, 0xd0, 0x78, 0x60, 0x51, 0x28, 0x17, 0xdc, 0x0f, 0x05, 0x95,
	0x94, 0x85, 0xbb, 0xd1, 0xbf, 0xc1, 0xa0, 0xd8, 0xcb, 0x49, 0x51, 0x41, 0x55, 0xaa, 0xde, 0x6b,
	0xfd, 0x07, 0x93, 0x62, 0x4f, 0xb0, 0x95, 0x87, 0xc9, 0xc6, 0x5b, 0x73, 0x16, 0x6d, 0x93, 0x19,
	0x15, 0xf4, 0x93, 0xe2, 0x39, 0x5b, 0x4d, 0xc8, 0x66, 0x1a, 0x5f, 0x3a, 0x4f, 0xd0, 0x3c, 0xea,
	0x7f, 0x01, 0xda, 0x0b, 0x30, 0xa7, 0x44, 0x1e, 0x6a, 0xd5, 0x84, 0xef, 0x31, 0xa7, 0x80, 0x49,
	0x45, 0x57, 0xa7, 0x78, 0x1e, 0x30, 0x79, 0x3e, 0xd9, 0x3b, 0xa8, 0xe7, 0xba, 0x2a, 0x9a, 0x67,
	0xfa, 0xa1, 0xff, 0xa1, 0x41, 0x0d, 0x31, 0xe9, 0xc7, 0x6f, 0x54, 0x2a, 0x8d, 0xc0, 0xd8, 0x5b,
	0xc4, 0xb2, 0x5d, 0xe5, 0xce, 0xa2, 0xe3, 0xda, 0xad, 0x13, 0x19, 0x35, 0x7c, 0x04, 0xc6, 0x7e,
	0xdf, 0x59, 0x87, 0xa2, 0x4d, 0xb2, 0x0e, 0xc7, 0xe6, 0x40, 0xf0, 0xab, 0xb0, 0x00, 0xeb, 0xcf,
	0x0e, 0x7d, 0x7a, 0xf3, 0xed, 0xbf, 0x5f, 0xe6, 0x33, 0x56, 0x7b, 0x9d, 0x32, 0x56, 0xc5, 0x85,
	0x64, 0xac, 0x8e, 0x44, 0x1d, 0xdf, 0x3c, 0x5f, 0xaf, 0xa9, 0x7c, 0x8d, 0x96, 0xee, 0x8a, 0x6d,
	0x7a, 0x64, 0xcd, 0xf8, 0xd5, 0x60, 0x38, 0xdc, 0xfd, 0x51, 0xae, 0x64, 0x54, 0xee, 0xeb, 0xe5,
	0xff, 0xf8, 0x52, 0x4f, 0xa2, 0xc1, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2f, 0xc5, 0x8a, 0x36,
	0xfa, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RotationBannerClient is the client API for RotationBanner service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RotationBannerClient interface {
	AddBanner(ctx context.Context, in *AddBannerRequest, opts ...grpc.CallOption) (*AddBannerResponse, error)
	DelBanner(ctx context.Context, in *DelBannerRequest, opts ...grpc.CallOption) (*DelBannerResponse, error)
	CountTransition(ctx context.Context, in *CountTransitionRequest, opts ...grpc.CallOption) (*CountTransitionResponse, error)
	GetBanner(ctx context.Context, in *GetBannerRequest, opts ...grpc.CallOption) (*GetBannerResponse, error)
}

type rotationBannerClient struct {
	cc *grpc.ClientConn
}

func NewRotationBannerClient(cc *grpc.ClientConn) RotationBannerClient {
	return &rotationBannerClient{cc}
}

func (c *rotationBannerClient) AddBanner(ctx context.Context, in *AddBannerRequest, opts ...grpc.CallOption) (*AddBannerResponse, error) {
	out := new(AddBannerResponse)
	err := c.cc.Invoke(ctx, "/server.RotationBanner/AddBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationBannerClient) DelBanner(ctx context.Context, in *DelBannerRequest, opts ...grpc.CallOption) (*DelBannerResponse, error) {
	out := new(DelBannerResponse)
	err := c.cc.Invoke(ctx, "/server.RotationBanner/DelBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationBannerClient) CountTransition(ctx context.Context, in *CountTransitionRequest, opts ...grpc.CallOption) (*CountTransitionResponse, error) {
	out := new(CountTransitionResponse)
	err := c.cc.Invoke(ctx, "/server.RotationBanner/CountTransition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationBannerClient) GetBanner(ctx context.Context, in *GetBannerRequest, opts ...grpc.CallOption) (*GetBannerResponse, error) {
	out := new(GetBannerResponse)
	err := c.cc.Invoke(ctx, "/server.RotationBanner/GetBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RotationBannerServer is the server API for RotationBanner service.
type RotationBannerServer interface {
	AddBanner(context.Context, *AddBannerRequest) (*AddBannerResponse, error)
	DelBanner(context.Context, *DelBannerRequest) (*DelBannerResponse, error)
	CountTransition(context.Context, *CountTransitionRequest) (*CountTransitionResponse, error)
	GetBanner(context.Context, *GetBannerRequest) (*GetBannerResponse, error)
}

// UnimplementedRotationBannerServer can be embedded to have forward compatible implementations.
type UnimplementedRotationBannerServer struct {
}

func (*UnimplementedRotationBannerServer) AddBanner(ctx context.Context, req *AddBannerRequest) (*AddBannerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBanner not implemented")
}
func (*UnimplementedRotationBannerServer) DelBanner(ctx context.Context, req *DelBannerRequest) (*DelBannerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelBanner not implemented")
}
func (*UnimplementedRotationBannerServer) CountTransition(ctx context.Context, req *CountTransitionRequest) (*CountTransitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountTransition not implemented")
}
func (*UnimplementedRotationBannerServer) GetBanner(ctx context.Context, req *GetBannerRequest) (*GetBannerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBanner not implemented")
}

func RegisterRotationBannerServer(s *grpc.Server, srv RotationBannerServer) {
	s.RegisterService(&_RotationBanner_serviceDesc, srv)
}

func _RotationBanner_AddBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBannerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationBannerServer).AddBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.RotationBanner/AddBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationBannerServer).AddBanner(ctx, req.(*AddBannerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RotationBanner_DelBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelBannerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationBannerServer).DelBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.RotationBanner/DelBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationBannerServer).DelBanner(ctx, req.(*DelBannerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RotationBanner_CountTransition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountTransitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationBannerServer).CountTransition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.RotationBanner/CountTransition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationBannerServer).CountTransition(ctx, req.(*CountTransitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RotationBanner_GetBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBannerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationBannerServer).GetBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.RotationBanner/GetBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationBannerServer).GetBanner(ctx, req.(*GetBannerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RotationBanner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.RotationBanner",
	HandlerType: (*RotationBannerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddBanner",
			Handler:    _RotationBanner_AddBanner_Handler,
		},
		{
			MethodName: "DelBanner",
			Handler:    _RotationBanner_DelBanner_Handler,
		},
		{
			MethodName: "CountTransition",
			Handler:    _RotationBanner_CountTransition_Handler,
		},
		{
			MethodName: "GetBanner",
			Handler:    _RotationBanner_GetBanner_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/server/server.proto",
}
